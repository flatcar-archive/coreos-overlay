name: Get the latest Go release for Edge
on:
  schedule:
    - cron:  '0 7 * * *'

jobs:
  get-go-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Fetch latest Go release
        id: fetch-latest-release
        env:
          GO_VERSION: 1.13
        run: |
          git clone https://github.com/golang/go
          versionEdge=$(git -C go tag | sed -n "/^go${GO_VERSION}.[0-9]*$/s/^go//p" | sort -ruV | head -1)
          rm -rf go
          echo ::set-output name=VERSION_EDGE::$(echo ${versionEdge})
          echo ::set-output name=BASE_BRANCH_EDGE::flatcar-master-edge
      - name: Set up Flatcar SDK
        id: setup-flatcar-sdk
        env:
          CORK_VERSION: 0.13.2
        run: .github/workflows/setup-flatcar-sdk.sh
      - name: Apply patch for Edge
        id: apply-patch-edge
        env:
          BASE_BRANCH: ${{ steps.fetch-latest-release.outputs.BASE_BRANCH_EDGE }}
          GO_VERSION: 1.13
          PATH: ${{ steps.setup-flatcar-sdk.outputs.path }}
          VERSION_NEW: ${{ steps.fetch-latest-release.outputs.VERSION_EDGE }}
        run: .github/workflows/go-apply-patch.sh
      - name: Create pull request for Edge
        uses: peter-evans/create-pull-request@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: ${{ steps.fetch-latest-release.outputs.BASE_BRANCH_EDGE }}
          branch: go-${{ steps.fetch-latest-release.outputs.VERSION_EDGE }}-edge
          author: Flatcar Buildbot <buildbot@flatcar-linux.org>
          committer: Flatcar Buildbot <buildbot@flatcar-linux.org>
          title: Upgrade Go in Edge from ${{ steps.apply-patch-edge.outputs.VERSION_OLD }} to ${{ steps.fetch-latest-release.outputs.VERSION_EDGE }}
          commit-message: Upgrade Go in Edge from ${{ steps.apply-patch-edge.outputs.VERSION_OLD }} to ${{ steps.fetch-latest-release.outputs.VERSION_EDGE }}
          body: Upgrade Go in Edge from ${{ steps.apply-patch-edge.outputs.VERSION_OLD }} to ${{ steps.fetch-latest-release.outputs.VERSION_EDGE }}
          labels: edge
